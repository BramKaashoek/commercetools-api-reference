type: base
uriParameters:
  storeKey:
    type: string
/carts:
  type:
    baseDomain:
      resourceType: Cart
      # change to: resourceQueryType: CartPagedQueryResponse | Cart
      resourceQueryType: CartPagedQueryResponse | object
      resourceDraft: CartDraft
      whereExample: customerEmail = "john.doe@example.com"
      sortExample: createdAt asc
  description: A shopping cart holds product variants and can be ordered.
  get:
    securedBy: [oauth_2_0: {
      scopes: ["manage_project:{projectKey}", "view_orders:{projectKey}", "view_orders:{projectKey}:{storeKey}"]
    }]
    queryParameters:
      customerId?:
        type: string
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/carts.example.json
  post:
    securedBy: [oauth_2_0: {
      scopes: ["manage_project:{projectKey}", "manage_orders:{projectKey}", "manage_orders:{projectKey}:{storeKey}"]
    }]
    body:
      application/json:
        example: !include ../examples/cart-create.example.json
    responses:
      201:
        body:
          application/json:
            example: !include ../examples/cart.example.json
  /{ID}:
    (methodName): withId
    type:
      baseResource:
        uriParameterName: ID
        resourceType: Cart
        resourceUpdateType: Update
    get:
      securedBy: [oauth_2_0: {
        scopes: ["manage_project:{projectKey}", "view_orders:{projectKey}", "view_orders:{projectKey}:{storeKey}"]
      }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/cart.example.json
    post:
      securedBy: [oauth_2_0: {
        scopes: ["manage_project:{projectKey}", "manage_orders:{projectKey}", "manage_orders:{projectKey}:{storeKey}"]
      }]
      body:
        application/json:
          example: !include ../examples/cart-update.example.json
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/cart.example.json
    delete:
      is:
        - dataErasure
      securedBy: [oauth_2_0: {
        scopes: ["manage_project:{projectKey}", "manage_orders:{projectKey}", "manage_orders:{projectKey}:{storeKey}"]
      }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/cart.example.json
/orders:
  type:
    baseDomain:
      resourceType: Order
      resourceQueryType: OrderPagedQueryResponse
      resourceDraft: OrderFromCartDraft
      whereExample: customerEmail = "john.doe@example.com"
      sortExample: createdAt asc
  description: An order can be created from a cart, usually after a checkout process has been completed.
  get:
    securedBy: [oauth_2_0: {
      scopes: ["manage_project:{projectKey}", "view_orders:{projectKey}", "view_orders:{projectKey}:{storeKey}"]
    }]
    responses:
      200:
        body:
          application/json:
            example: !include ../examples/orders.example.json
  post:
    securedBy: [oauth_2_0: {
      scopes: ["manage_project:{projectKey}", "manage_orders:{projectKey}", "manage_orders:{projectKey}:{storeKey}"]
    }]
    body:
      application/json:
        example: !include ../examples/order-create.example.json
    responses:
      201:
        body:
          application/json:
            example: !include ../examples/order.example.json
  /order-number={orderNumber}:
    (methodName): withOrderNumber
    type:
      baseResource:
        uriParameterName: orderNumber
        resourceType: Order
        resourceUpdateType: Update
    get:
      securedBy: [oauth_2_0: {
        scopes: ["manage_project:{projectKey}", "view_orders:{projectKey}", "view_orders:{projectKey}:{storeKey}"]
      }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/order.example.json
    post:
      securedBy: [oauth_2_0: {
        scopes: ["manage_project:{projectKey}", "manage_orders:{projectKey}", "manage_orders:{projectKey}:{storeKey}"]
      }]
      body:
        application/json:
          example: !include ../examples/order-update.example.json
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/order.example.json
    delete:
      is:
        - dataErasure
      securedBy: [oauth_2_0: {
        scopes: ["manage_project:{projectKey}", "manage_orders:{projectKey}", "manage_orders:{projectKey}:{storeKey}"]
      }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/order.example.json
  /{ID}:
    (methodName): withId
    type:
      baseResource:
        uriParameterName: ID
        resourceType: Order
        resourceUpdateType: Update
    get:
      securedBy: [oauth_2_0: {
        scopes: ["manage_project:{projectKey}", "view_orders:{projectKey}", "view_orders:{projectKey}:{storeKey}"]
      }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/order.example.json
    post:
      securedBy: [oauth_2_0: {
        scopes: ["manage_project:{projectKey}", "manage_orders:{projectKey}", "manage_orders:{projectKey}:{storeKey}"]
      }]
      body:
        application/json:
          example: !include ../examples/order-update.example.json
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/order.example.json
    delete:
      is:
        - dataErasure
      securedBy: [oauth_2_0: {
        scopes: ["manage_project:{projectKey}", "manage_orders:{projectKey}", "manage_orders:{projectKey}:{storeKey}"]
      }]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/order.example.json
/me:
  /carts:
    type:
      baseDomain:
        resourceType: Cart
        resourceQueryType: CartPagedQueryResponse
        resourceDraft: MyCartDraft
        whereExample: customerEmail = "john.doe@example.com"
        sortExample: createdAt asc
    description: A shopping cart holds product variants and can be ordered.
    get:
      securedBy: [oauth_2_0: {scopes: ["manage_my_orders:{projectKey}", "manage_my_orders:{projectKey}:{storeKey}"]}]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/carts.example.json
    post:
      securedBy: [oauth_2_0: {scopes: ["manage_my_orders:{projectKey}", "manage_my_orders:{projectKey}:{storeKey}"]}]
      body:
        application/json:
          example: !include ../examples/cart-create.example.json
      responses:
        201:
          body:
            application/json:
              example: !include ../examples/cart.example.json
    /{ID}:
      (methodName): withId
      type:
        baseResource:
          uriParameterName: ID
          resourceType: Cart
          resourceUpdateType: Update
      get:
        securedBy: [oauth_2_0: {scopes: ["manage_my_orders:{projectKey}", "manage_my_orders:{projectKey}:{storeKey}"]}]
        responses:
          200:
            body:
              application/json:
                example: !include ../examples/cart.example.json
      post:
        securedBy: [oauth_2_0: {scopes: ["manage_my_orders:{projectKey}", "manage_my_orders:{projectKey}:{storeKey}"]}]
        body:
          application/json:
            example: !include ../examples/cart-update.example.json
        responses:
          200:
            body:
              application/json:
                example: !include ../examples/cart.example.json
      delete:
        securedBy: [oauth_2_0: {scopes: ["manage_my_orders:{projectKey}", "manage_my_orders:{projectKey}:{storeKey}"]}]
        responses:
          200:
            body:
              application/json:
                example: !include ../examples/cart.example.json
  /orders:
    type:
      baseDomain:
        resourceType: Order
        resourceQueryType: OrderPagedQueryResponse
        resourceDraft: MyOrderFromorderDraft
        whereExample: customerEmail = "john.doe@example.com"
        sortExample: createdAt asc
    description: An order can be created from a order, usually after a checkout process has been completed.
    get:
      securedBy: [oauth_2_0: {scopes: ["manage_my_orders:{projectKey}", "manage_my_orders:{projectKey}:{storeKey}"]}]
      responses:
        200:
          body:
            application/json:
              example: !include ../examples/orders.example.json
    post:
      securedBy: [oauth_2_0: {scopes: ["manage_my_orders:{projectKey}", "manage_my_orders:{projectKey}:{storeKey}"]}]
      body:
        application/json:
          example: !include ../examples/order-create.example.json
      responses:
        201:
          body:
            application/json:
              example: !include ../examples/order.example.json
    /{ID}:
      (methodName): withId
      type:
        baseResource:
          uriParameterName: ID
          resourceType: Order
          resourceUpdateType: Update
      get:
        securedBy: [oauth_2_0: {scopes: ["manage_my_orders:{projectKey}", "manage_my_orders:{projectKey}:{storeKey}"]}]
        responses:
          200:
            body:
              application/json:
                example: !include ../examples/order.example.json
  /active-cart:
    type: base
    get:
      securedBy: [oauth_2_0: {scopes: ["manage_my_orders:{projectKey}", "manage_my_orders:{projectKey}:{storeKey}"]}]
      responses:
        200:
          body:
            application/json:
              type: Cart
              example: !include ../examples/cart.example.json
