type: base
get:
    is:
        - query:
            whereExample: customerEmail = "foo@bar.com"
        - sortable:
            sortExample: createdAt asc
        - paging
        - expandable
    securedBy: [oauth_2_0: {scopes: ["manage_my_profile:{projectKey}"]}]
    responses:
        200:
            body:
                application/json:
                    type: Customer
post:
    description: Create a customer
    securedBy: [oauth_2_0: {scopes: ["manage_my_profile:{projectKey}"]}]
    body:
        application/json:
            example: !include ../examples/customer-update.example.json
            type: Update
    responses:
        200:
            body:
                application/json:
                    example: !include ../examples/customer-update-response.example.json
                    type: Customer
delete:
    description: Delete a Customer
    is:
        - versioned
        - conflicting
    securedBy: [oauth_2_0: {scopes: ["manage_my_profile:{projectKey}"]}]
    responses:
        200:
            body:
                application/json:
                    example: !include ../examples/customer.example.json
                    type: Customer
/email:
    /confirm:
        type: base
        post:
            securedBy: [oauth_2_0: {scopes: ["manage_my_profile:{projectKey}"]}]
/password:
    type: base
    post:
        is:
            - conflicting
        securedBy: [oauth_2_0: {scopes: ["manage_my_profile:{projectKey}"]}]
        body:
            application/json:
        responses:
            200:
                body:
                    application/json:
                        example: !include ../examples/customer.example.json
                        type: Customer
    /reset:
        type: base
        post:
            securedBy: [oauth_2_0: {scopes: ["manage_my_profile:{projectKey}"]}]
            responses:
                200:
                    body:
                        application/json:
                            example: !include ../examples/customer.example.json
                            type: Customer
/signup:
    type: base
    post:
        securedBy: [oauth_2_0: {scopes: ["manage_my_profile:{projectKey}"]}]
        body:
            application/json:
                type: MyCustomerDraft
        responses:
            201:
                body:
                    application/json:
                        type: CustomerSignInResult
/login:
    type: base
    post:
        securedBy: [oauth_2_0: {scopes: ["manage_my_profile:{projectKey}"]}]
        body:
            application/json:
        responses:
            200:
                body:
                    application/json:
                        type: CustomerSignInResult
/active-cart:
    type: base
    get:
        securedBy: [oauth_2_0: {scopes: ["manage_my_orders:{projectKey}"]}]
        responses:
            200:
                body:
                    application/json:
                        type: Cart
/carts:
  type:
    baseDomain:
      resourceType: Cart
      resourceQueryType: CartPagedQueryResponse
      resourceDraft: MyCartDraft
      resourceExample: !include ../examples/cart.example.json
      resourceQueryExample: !include ../examples/carts.example.json
      resourceCreateExample: !include ../examples/cart-create.example.json
      readScopes: ["manage_my_orders:{projectKey}"]
      writeScopes: ["manage_my_orders:{projectKey}"]
      whereExample: customerEmail = "john.doe@example.com"
      sortExample: createdAt asc
  description: A shopping cart holds product variants and can be ordered.
  post:
  /{ID}:
    type:
      baseResource:
        uriParameterName: ID
        resourceType: Cart
        resourceUpdateType: Update
        resourceUpdateExample: !include ../examples/cart-update.example.json
        resourceExample: !include ../examples/cart.example.json
        readScopes: ["manage_my_orders:{projectKey}"]
        writeScopes: ["manage_my_orders:{projectKey}"]
    get:
    post:
    delete:
/orders:
  type:
    baseDomain:
      resourceType: Order
      resourceQueryType: OrderPagedQueryResponse
      resourceDraft: MyOrderFromCartDraft
      resourceExample: !include ../examples/order.example.json
      resourceQueryExample: !include ../examples/orders.example.json
      resourceCreateExample: !include ../examples/order-create.example.json
      readScopes: ["manage_my_orders:{projectKey}"]
      writeScopes: ["manage_my_orders:{projectKey}"]
      whereExample: customerEmail = "john.doe@example.com"
      sortExample: createdAt asc
  description: An order can be created from a cart, usually after a checkout process has been completed.
  post:
  /{ID}:
    type:
      baseResource:
        uriParameterName: ID
        resourceType: Order
        resourceUpdateType: Update
        resourceUpdateExample: !include ../examples/order-update.example.json
        resourceExample: !include ../examples/order.example.json
        readScopes: ["manage_my_orders:{projectKey}"]
        writeScopes: ["manage_my_orders:{projectKey}"]
    get:
    post:

