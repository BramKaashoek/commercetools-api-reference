{
  "openapi": "3.0.0",
  "info": {
    "title": "Commercetools OAuth API",
    "version": "1"
  },
  "servers": [
    {
      "url": "https://auth.sphere.io/"
    }
  ],
  "paths": {
    "/oauth/introspect": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntrospectResponse"
                }
              }
            }
          }
        },
        "operationId": "POST_oauth-introspect",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/oauth/token": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "operationId": "POST_oauth-token",
        "parameters": [
          {
            "name": "grant_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "refresh_token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/oauth/{projectKey}/customers/token": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "description": "To obtain an access token through the password flow, you need to provide the email and unencrypted\npassword of the customer in addition to your OAuth client credentials.\n\nIn addition to the access token, a refresh token is issued. The refresh token may be used to get a\nnew access token without supplying email and password if the access token has expired.\n",
        "operationId": "POST_oauth-projectKey-customers-token",
        "parameters": [
          {
            "name": "grant_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PasswordType"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/oauth/{projectKey}/anonymous/token": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "description": "To obtain an access token for an Anonymous Session, the OAuth client needs the create_anonymous_token scope.\nThe regular Client Credentials Flow is used.\n\nThese access tokens are similar to those issued with the Password Flow, but they are not associated with a\ncustomer but with an anonymousId. In addition to the access token, a refresh token is issued. The refresh\ntoken is the only way to get a new access token for this particular anonymousId.\n\nThe anonymousId is either generated by the API or an unused id may be supplied with the optional parameter\nanonymous_id.\n",
        "operationId": "POST_oauth-projectKey-anonymous-token",
        "parameters": [
          {
            "name": "grant_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ClientCredentialsType"
            }
          },
          {
            "name": "anonymous_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "name": "projectKey",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "IntrospectResponse": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "scope": {
            "type": "string"
          },
          "exp": {
            "format": "int64",
            "type": "number"
          }
        },
        "required": [
          "active"
        ],
        "type": "object"
      },
      "TokenResponse": {
        "properties": {
          "access_token": {
            "type": "string"
          },
          "expires_in": {
            "format": "int64",
            "type": "number"
          },
          "scope": {
            "type": "string"
          },
          "token_type": {
            "$ref": "#/components/schemas/TokenType"
          }
        },
        "required": [
          "access_token",
          "expires_in",
          "scope",
          "token_type"
        ],
        "type": "object"
      },
      "RefreshTokenResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TokenResponse"
          },
          {
            "properties": {
              "refresh_token": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "type": "string"
      },
      "TokenType": {
        "enum": [
          "Bearer"
        ],
        "type": "string"
      },
      "ClientCredentialsType": {
        "enum": [
          "client_credentials"
        ],
        "$ref": "#/components/schemas/GrantType"
      },
      "PasswordType": {
        "enum": [
          "password"
        ],
        "$ref": "#/components/schemas/GrantType"
      },
      "RefreshTokenType": {
        "enum": [
          "refresh_token"
        ],
        "$ref": "#/components/schemas/GrantType"
      },
      "GrantType": {
        "type": "string"
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {
      "basic": {
        "description": "To obtain an access token through the client credentials flow, simply issue the following request to the\nauth service, providing your client_id and client_secret via HTTP Basic Authentication , where the username\nis the client_id and the password is the client_secret\n",
        "type": "http",
        "scheme": "basic"
      }
    },
    "links": {},
    "callbacks": {}
  }
}